{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Card","props","image","clickCard","sectionStyle","backgroundPosition","backgroundSize","backgroundRepeat","backgroundImage","concat","react_default","a","createElement","className","onClick","id","style","Wrapper","children","App","state","options","guessed","score","highScore","handleCard","_this$state","_this","i","sort","Math","random","selected","resetGame","setState","setTimeout","console","log","_this2","this","cardOptions","map","option","components_Card","Object","assign","key","components_Wrapper","length","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"inEAuBeA,MApBf,SAAcC,GAAO,IAGjBC,EAEED,EAFFC,MACAC,EACEF,EADFE,UAGEC,EAAe,CACjBC,mBAAoB,SACpBC,eAAgB,UAChBC,iBAAkB,YAClBC,gBAAe,OAAAC,OAASP,EAAT,MAGjB,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAMX,EAAUF,EAAMc,KAAKC,MAAQZ,WCXvDa,MAJf,SAAiBhB,GACf,OAAOS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWZ,EAAMiB,kBCsG1BC,oNAlGbC,MAAQ,CACNC,UACAC,QAAS,KACTC,MAAO,EACPC,UAAW,KAGbC,WAAa,SAAAV,GAAM,IAAAW,EAObC,EAAKP,MAJPC,EAHeK,EAGfL,QACAE,EAJeG,EAIfH,MACAC,EALeE,EAKfF,UACAF,EANeI,EAMfJ,QAMF,IAAK,IAAIM,KAFTP,EAAUA,EAAQQ,KAAK,kBAAMC,KAAKC,SAAW,KAG3C,GAAIV,EAAQO,GAAGb,KAAOA,EAAI,CACxB,GAAGM,EAAQO,GAAGI,SAAS,CACrBT,EAAQ,EACRD,GAAU,EACVK,EAAKM,YACL,QAGAV,EACWC,IACTA,EAAYD,GAEdD,GAAU,EACVD,EAAQO,GAAGI,UAAW,EAExB,MAGJL,EAAKO,SAAS,CAAEb,UAASE,QAAOC,YAAWF,YAC3Ca,WAAW,WACTR,EAAKO,SAAS,CAACZ,QAAS,QACvB,SAGLW,UAAY,WAGV,IAAK,IAAIL,KADTQ,QAAQC,IAAI,eACEhB,EACZA,EAAQO,GAAGI,UAAW,EAGxBL,EAAKO,SAAS,CACZb,UACAE,MAAO,IAGTY,WAAW,WACTR,EAAKO,SAAS,CAAEZ,QAAS,QACxB,+EAIG,IAAAgB,EAAAC,KAIAC,EAFcD,KAAKnB,MAAjBC,QAEoBoB,IAAI,SAAAC,GAAM,OACpChC,EAAAC,EAAAC,cAAC+B,EAADC,OAAAC,OAAA,GAAUH,EAAV,CAAkBvC,UAAWmC,EAAKb,WAAYqB,IAAKJ,EAAO3B,QAG5D,OAEEL,EAAAC,EAAAC,cAACmC,EAAD,KACIrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,8EACAH,EAAAC,EAAAC,cAAA,mBACWF,EAAAC,EAAAC,cAAA,cAAS2B,KAAKnB,MAAMG,MAApB,OAA+BgB,KAAKnB,MAAMC,QAAQ2B,QAD7D,8BAGmBtC,EAAAC,EAAAC,cAAA,cAAS2B,KAAKnB,MAAMI,YAEtCe,KAAKnB,MAAMG,QAAUgB,KAAKnB,MAAMC,QAAQ2B,OACvCtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQE,QAASyB,KAAKN,WAAtB,iBACQ,GACZvB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAkC,OAAvB0B,KAAKnB,MAAME,SAAoBiB,KAAKnB,MAAME,QAAU,uBAA4C,gBAAjH,0BACAZ,EAAAC,EAAAC,cAAA,QAAMC,UAAkC,OAAvB0B,KAAKnB,MAAME,QAAoBiB,KAAKnB,MAAME,QAAU,eAAiB,yBAA6B,gBAAnH,6BAEFZ,EAAAC,EAAAC,cAAA,OAAKC,UAAkC,OAAvB0B,KAAKnB,MAAME,QAAoBiB,KAAKnB,MAAME,QAAU,kBAAoB,wBAA4B,mBACjHkB,WA5FKS,IAAMC,kBCDxBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0607242a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n\n  const {\n    image,\n    clickCard\n  } = props;\n\n  var sectionStyle = {\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundImage: `url(${image})`\n  };\n\n  return (\n    <div className=\"card\" onClick={() => clickCard(props.id)} style={ sectionStyle }>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport options from \"./options.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n  state = { \n    options,\n    guessed: null,\n    score: 0,\n    highScore: 0 \n  };\n\n  handleCard = id => {\n  \n    let {\n      options,\n      score,\n      highScore,\n      guessed\n    } = this.state;\n\n    // shuffle order\n    options = options.sort(() => Math.random() - 0.5);\n\n    for (var i in options) {\n      if (options[i].id === id) {\n        if(options[i].selected){\n          score = 0;\n          guessed = false;\n          this.resetGame();\n          break;\n        } else {\n          // score up\n          score++;\n          if(score > highScore){\n            highScore = score;\n          }\n          guessed = true;\n          options[i].selected = true;\n        }\n        break; //Stop this loop, we found it!\n      }\n    }\n    this.setState({ options, score, highScore, guessed });\n    setTimeout(() => {\n      this.setState({guessed: null});\n    }, 3500)\n  }\n\n  resetGame = () => {\n\n    console.log(\"Game resets\");\n    for (var i in options) {\n      options[i].selected = false;\n    }\n\n    this.setState({ \n      options,\n      score: 0\n    });\n\n    setTimeout(() => {\n      this.setState({ guessed: null });\n    }, 3500)\n    \n  }\n\n  render(){\n\n    const { options } = this.state;\n\n    const cardOptions = options.map(option => (\n      <Card {...option} clickCard={this.handleCard} key={option.id} />\n    ));\n\n    return (\n\n      <Wrapper>\n          <h1 className=\"title\">Clicky Game</h1>\n          <p className=\"instructions\">Click on an Image to Earn Points, but don't click on the same image twice!</p>\n          <p>\n              Score: <strong>{this.state.score} of {this.state.options.length}</strong> \n              &nbsp; | &nbsp; \n              Highest Score: <strong>{this.state.highScore}</strong>\n          </p>\n          {this.state.score === this.state.options.length ? (\n            <div>\n              <h3>You won!!!</h3>\n              <button onClick={this.resetGame}>Restart Game</button>  \n            </div>) : \"\"}\n          <p>\n            <span className={this.state.guessed !== null ? (this.state.guessed ? \"guesses correct show\" : \"guesses hide\" ) : \"guesses hide\"}>You guessed correctly!</span>\n            <span className={this.state.guessed !== null ? (this.state.guessed ? \"guesses hide\" : \"guesses incorrect show\" ) : \"guesses hide\"}>You guessed incorrectly!</span>\n          </p>\n          <div className={this.state.guessed !== null ? (this.state.guessed ? \"wrapper-content\" : \"shake wrapper-content\" ) : \"wrapper-content\"}>  \n            {cardOptions}\n          </div>\n      </Wrapper>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}