{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Card","props","image","clickCard","sectionStyle","backgroundPosition","backgroundSize","backgroundRepeat","backgroundImage","concat","react_default","a","createElement","className","onClick","id","style","Wrapper","children","INITIAL_STATE","options","guessed","score","highScore","App","state","handleCard","_this$state","_this","i","sort","Math","random","selected","resetGame","setState","setTimeout","console","log","Object","assign","_this2","this","cardOptions","map","option","components_Card","key","components_Wrapper","length","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"ynEAuBeA,MApBf,SAAcC,GAAO,IAGjBC,EAEED,EAFFC,MACAC,EACEF,EADFE,UAGEC,EAAe,CACjBC,mBAAoB,SACpBC,eAAgB,UAChBC,iBAAkB,YAClBC,gBAAe,OAAAC,OAASP,EAAT,MAGjB,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAMX,EAAUF,EAAMc,KAAKC,MAAQZ,WCXvDa,MAJf,SAAiBhB,GACf,OAAOS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWZ,EAAMiB,kBCEnCC,SAAgB,CACpBC,UACAC,QAAS,KACTC,MAAO,EACPC,UAAW,IAiGEC,6MA5FbC,qBAAaN,KAEbO,WAAa,SAAAX,GAAM,IAAAY,EAObC,EAAKH,MAJPL,EAHeO,EAGfP,QACAE,EAJeK,EAIfL,MACAC,EALeI,EAKfJ,UACAF,EANeM,EAMfN,QAOF,IAAK,IAAIQ,KAHTT,EAAUA,EAAQU,KAAK,kBAAMC,KAAKC,SAAW,KAI3C,GAAIZ,EAAQS,GAAGd,KAAOA,EAAI,CACxB,GAAGK,EAAQS,GAAGI,SAAS,CACrBX,EAAQ,EACRD,GAAU,EACVO,EAAKM,YACL,QAGAZ,EACWC,IACTA,EAAYD,GAEdD,GAAU,EACVD,EAAQS,GAAGI,UAAW,EAExB,MAGJL,EAAKO,SAAS,CAAEf,UAASE,QAAOC,YAAWF,YAC3Ce,WAAW,WACTR,EAAKO,SAAS,CAACd,QAAS,QACvB,SAGLa,UAAY,WAEVG,QAAQC,IAAI,eACZ,IAAMlB,EAAUmB,OAAOC,OAAO,GAAGrB,GAEjCS,EAAKO,SAAS,CACZf,UACAE,MAAO,IAGTc,WAAW,WACTR,EAAKO,SAAS,CAAEd,QAAS,QACxB,+EAIG,IAAAoB,EAAAC,KAIAC,EAFcD,KAAKjB,MAAjBL,QAEoBwB,IAAI,SAAAC,GAAM,OACpCnC,EAAAC,EAAAC,cAACkC,EAADP,OAAAC,OAAA,GAAUK,EAAV,CAAkB1C,UAAWsC,EAAKf,WAAYqB,IAAKF,EAAO9B,QAG5D,OAEEL,EAAAC,EAAAC,cAACoC,EAAD,KACItC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,8EACAH,EAAAC,EAAAC,cAAA,mBACWF,EAAAC,EAAAC,cAAA,cAAS8B,KAAKjB,MAAMH,MAApB,OAA+BoB,KAAKjB,MAAML,QAAQ6B,QAD7D,8BAGmBvC,EAAAC,EAAAC,cAAA,cAAS8B,KAAKjB,MAAMF,YAEtCmB,KAAKjB,MAAMH,QAAUoB,KAAKjB,MAAML,QAAQ6B,OACvCvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQE,QAAS4B,KAAKR,WAAtB,iBACQ,GACZxB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAkC,OAAvB6B,KAAKjB,MAAMJ,SAAoBqB,KAAKjB,MAAMJ,QAAU,uBAA4C,gBAAjH,0BACAX,EAAAC,EAAAC,cAAA,QAAMC,UAAkC,OAAvB6B,KAAKjB,MAAMJ,QAAoBqB,KAAKjB,MAAMJ,QAAU,eAAiB,yBAA6B,gBAAnH,6BAEFX,EAAAC,EAAAC,cAAA,OAAKC,UAAkC,OAAvB6B,KAAKjB,MAAMJ,QAAoBqB,KAAKjB,MAAMJ,QAAU,kBAAoB,wBAA4B,mBACjHsB,WAtFKO,IAAMC,iBCRxBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5349042b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n\n  const {\n    image,\n    clickCard\n  } = props;\n\n  var sectionStyle = {\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundImage: `url(${image})`\n  };\n\n  return (\n    <div className=\"card\" onClick={() => clickCard(props.id)} style={ sectionStyle }>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport options from \"./options.json\";\nimport \"./App.css\";\n\nconst INITIAL_STATE = {\n  options,\n  guessed: null,\n  score: 0,\n  highScore: 0\n}\n\nclass App extends React.Component {\n\n  state = { ...INITIAL_STATE };\n\n  handleCard = id => {\n  \n    let {\n      options,\n      score,\n      highScore,\n      guessed\n    } = this.state;\n\n    // shuffle order\n    options = options.sort(() => Math.random() - 0.5);\n\n\n    for (var i in options) {\n      if (options[i].id === id) {\n        if(options[i].selected){\n          score = 0;\n          guessed = false;\n          this.resetGame();\n          break;\n        } else {\n          // score up\n          score++;\n          if(score > highScore){\n            highScore = score;\n          }\n          guessed = true;\n          options[i].selected = true;\n        }\n        break; //Stop this loop, we found it!\n      }\n    }\n    this.setState({ options, score, highScore, guessed });\n    setTimeout(() => {\n      this.setState({guessed: null});\n    }, 3500)\n  }\n\n  resetGame = () => {\n\n    console.log(\"Game resets\");\n    const options = Object.assign({},INITIAL_STATE);\n\n    this.setState({ \n      options,\n      score: 0\n    });\n\n    setTimeout(() => {\n      this.setState({ guessed: null });\n    }, 3500)\n    \n  }\n\n  render(){\n\n    const { options } = this.state;\n\n    const cardOptions = options.map(option => (\n      <Card {...option} clickCard={this.handleCard} key={option.id} />\n    ));\n\n    return (\n\n      <Wrapper>\n          <h1 className=\"title\">Clicky Game</h1>\n          <p className=\"instructions\">Click on an Image to Earn Points, but don't click on the same image twice!</p>\n          <p>\n              Score: <strong>{this.state.score} of {this.state.options.length}</strong> \n              &nbsp; | &nbsp; \n              Highest Score: <strong>{this.state.highScore}</strong>\n          </p>\n          {this.state.score === this.state.options.length ? (\n            <div>\n              <h3>You won!!!</h3>\n              <button onClick={this.resetGame}>Restart Game</button>  \n            </div>) : \"\"}\n          <p>\n            <span className={this.state.guessed !== null ? (this.state.guessed ? \"guesses correct show\" : \"guesses hide\" ) : \"guesses hide\"}>You guessed correctly!</span>\n            <span className={this.state.guessed !== null ? (this.state.guessed ? \"guesses hide\" : \"guesses incorrect show\" ) : \"guesses hide\"}>You guessed incorrectly!</span>\n          </p>\n          <div className={this.state.guessed !== null ? (this.state.guessed ? \"wrapper-content\" : \"shake wrapper-content\" ) : \"wrapper-content\"}>  \n            {cardOptions}\n          </div>\n      </Wrapper>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}